
AC_REVISION($Revision: 1.9 $)

AC_INIT([VINETIC Device Driver],[1.0.13],[],[drv_vinetic])
AC_CONFIG_SRCDIR(src/Makefile.am)
AM_INIT_AUTOMAKE

# save the configure arguments
CONFIGURE_OPTIONS="$ac_configure_args"
AC_SUBST(CONFIGURE_OPTIONS)

AC_CONFIG_HEADER(drv_config.h)
AC_PROG_CC

AH_TOP(
[/*******************************************************************************
       Copyright (c) 2005, Infineon Technologies.  All rights reserved.

                               No Warranty
   Because the program is licensed free of charge, there is no warranty for
   the program, to the extent permitted by applicable law.  Except when
   otherwise stated in writing the copyright holders and/or other parties
   provide the program "as is" without warranty of any kind, either
   expressed or implied, including, but not limited to, the implied
   warranties of merchantability and fitness for a particular purpose. The
   entire risk as to the quality and performance of the program is with
   you.  should the program prove defective, you assume the cost of all
   necessary servicing, repair or correction.

   In no event unless required by applicable law or agreed to in writing
   will any copyright holder, or any other party who may modify and/or
   redistribute the program as permitted above, be liable to you for
   damages, including any general, special, incidental or consequential
   damages arising out of the use or inability to use the program
   (including but not limited to loss of data or data being rendered
   inaccurate or losses sustained by you or third parties or a failure of
   the program to operate with any other programs), even if such holder or
   other party has been advised of the possibility of such damages.
 ******************************************************************************/
#ifndef _DRV_CONFIG_H_
#define _DRV_CONFIG_H_]
)

AH_BOTTOM([
#endif /* _DRV_CONFIG_H_ */
])

dnl Enable compiler warnings
AM_CONDITIONAL(WARNINGS, false)
AC_ARG_ENABLE(warnings,
    AC_HELP_STRING(
        [--enable-warnings],
        [Enable compiler warnings (GCC only)]
    ),
    [
        AM_CONDITIONAL(WARNINGS, true)
    ]
)


dnl Enable debugging mode
AM_CONDITIONAL(DEBUG, false)
AC_ARG_ENABLE(debug,
    AC_HELP_STRING(
        [--enable-debug],
        [Enable debug features]
    ),
    [
        if test $enableval = 'yes'; then
            AC_DEFINE([DEBUG],[1],[enable debug features as asserts for example])
            AM_CONDITIONAL(DEBUG, true)
            CFLAGS="$CFLAGS -O1 -g3"
        else
            CFLAGS="$CFLAGS -O2"
        fi
    ],
    [
        if test $CFLAGS="" ; then
            CFLAGS="-O2"
        fi
    ]
)

dnl Enable use of proc filesystem entries
AC_ARG_ENABLE(proc,
    AC_HELP_STRING(
        [--enable-proc],
        [Enable use of proc filesystem entries]
    ),
    [
        if test $enableval = 'yes'; then
            AC_MSG_RESULT(Enable use of proc filesystem entries (Linux only))
            AC_DEFINE([VINETIC_USE_PROC],[1],[Enable use of proc filesystem entries (Linux only)])
        fi
    ],
    [
        AC_MSG_RESULT(Enable use of proc filesystem entries (Linux only))
        AC_DEFINE([VINETIC_USE_PROC],[1],[Enable use of proc filesystem entries (Linux only)])
    ]
)

dnl Enable user configuration
AC_ARG_ENABLE(user-config,
    AC_HELP_STRING(
        [--enable-user-config],
        [Enable user configuration]
    ),
    [
       AC_MSG_RESULT(Enable user configuration)
       AC_DEFINE([ENABLE_USER_CONFIG],[1],[Enable user configuration.])
    ]
)

dnl Set kernel include path
DEFAULT_KERNEL_INCL_PATH='${HOME}/linux/include'
AC_ARG_ENABLE(kernelincl,
    AC_HELP_STRING(
        [--enable-kernelincl=x],
        [Set the target kernel include path]
    ),
    [
        if test -n $enableval; then
           echo Set the LINUX kernel include path $enableval
           AC_SUBST([KERNEL_INCL_PATH],[$enableval])
        else
           echo Set the default LINUX kernel include path $DEFAULT_KERNEL_INCL_PATH
           AC_SUBST([KERNEL_INCL_PATH],[$DEFAULT_KERNEL_INCL_PATH])
        fi
    ],
    [
        AC_MSG_ERROR([Please specify the kernel include path (--enable-kernelincl)]);
    ]
)

MAX_DEVICES=1
dnl Set the maximum number of devices supported
AC_ARG_WITH(max-devices,
    AC_HELP_STRING(
        [--with-max-devices=value],
        [Maximum VINETIC devices to support.]
    ),
    [
	    if test "$withval" = yes; then
		    AC_MSG_ERROR([ Please provide a value for the maximum devices ]);
	    fi
	    AC_MSG_RESULT(using maximum device number: $withval)
        MAX_DEVICES=$withval
    ],
    [
        AC_MSG_RESULT([Please provide a value for the maximum devices (--with-max-devices). Using 1 as default now.])
    ]
)
dnl make sure this is defined even if option is not given!
AC_DEFINE_UNQUOTED([VINETIC_MAX_DEVICES],[$MAX_DEVICES],[Maximum VINETIC devices to support])


dnl Enable runtime traces
AC_ARG_ENABLE(trace,
   AC_HELP_STRING(
      [--enable-trace],
      [Enable runtime traces]
   ),
   [
	    AC_MSG_RESULT(Enable runtime traces.)
        AC_DEFINE([ENABLE_TRACE],[1],[Enable trace outputs in general.])
        AC_DEFINE([RUNTIME_TRACE],[1],[Enable runtime traces as register access.])
   ]
)

dnl Enable linetesting features
AC_ARG_ENABLE(lt,
    AC_HELP_STRING(
        [--enable-lt],
        [Enable line testing services including GR909]
    ),
    [
	    AC_MSG_RESULT(Enable line testing services.)
        AC_DEFINE([TAPI_LT],[1],[Enable line testing.])
        AC_DEFINE([TAPI_GR909],[1],[Enable GR909 tests.])
    ]
)

dnl Enable 8 Bit bus access
AC_ARG_ENABLE(8bit,
    AC_HELP_STRING(
        [--enable-8bit],
        [Enable 8 Bit bus access]
    ),
    [
	    AC_MSG_RESULT(Enable 8 Bit bus access.)
        AC_DEFINE([VIN_8BIT],[1],[Enable 8 Bit bus access.])
    ]
)

dnl Enable SPI interface
AC_ARG_ENABLE(spi,
    AC_HELP_STRING(
        [--enable-spi],
        [Enable SPI interface]
    ),
    [
	    AC_MSG_RESULT(Enable SPI interface.)
       AC_DEFINE([VIN_SPI],[1],[Enable SPI interface, needs user configuration.])
       AC_MSG_RESULT(Enable user configuration for SPI support.)
       AC_DEFINE([ENABLE_USER_CONFIG],[1],[Enable user configuration.])
    ]
)

dnl Enable support of Vinetic version V1.x
AC_ARG_ENABLE(v1,
    AC_HELP_STRING(
      [--enable-v1],
      [Enable support of Vinetic version V1.x]
    ),
    [
        if test $enableval = 'yes'; then
            AC_MSG_RESULT(Enable support of Vinetic version V1.x.)
            AC_DEFINE([VIN_V14_SUPPORT],[1],[Enable support of Vinetic version V1.x.])
        else
            AC_MSG_RESULT(Disable support of Vinetic version V1.x.)
        fi
    ],
    [
        dnl Enable automatically:
	    AC_MSG_RESULT([Enable support of Vinetic version V1.x, as not explicit disabled!])
        AC_DEFINE([VIN_V14_SUPPORT],[1],[Enable support of Vinetic version V1.x.])
    ]
)

dnl Enable support of Vinetic version V2.x
AC_ARG_ENABLE(v2,
    AC_HELP_STRING(
      [--enable-v2],
      [Enable support of Vinetic version V2.x]
    ),
    [
        if test $enableval = 'yes'; then
            AC_MSG_RESULT(Enable support of Vinetic version V2.x.)
            AC_DEFINE([VIN_V21_SUPPORT],[1],[Enable support of Vinetic version V2.x.])
        else
            AC_MSG_RESULT(Disable support of Vinetic version V2.x.)
        fi
    ],
    [
        dnl Enable automatically:
	    AC_MSG_RESULT([Enable support of Vinetic version V2.x, as not explicit disabled!])
        AC_DEFINE([VIN_V21_SUPPORT],[1],[Enable support of Vinetic version V2.x.])
    ]
)

dnl Enable Voice support
AC_ARG_ENABLE(voice,
    AC_HELP_STRING(
        [--enable-voice],
        [Enable Voice support]
    ),
    [
        if test $enableval = 'yes'; then
            AC_MSG_RESULT(Enable Voice support.)
            AC_DEFINE([TAPI_VOICE],[1],[Enable Voice support.])
        else
            AC_MSG_RESULT(Disable Voice support.)
        fi
    ],
    [
        dnl Enable automatically:
        AC_MSG_RESULT([Enable Voice support, as not explicit disabled!])
        AC_DEFINE([TAPI_VOICE],[1],[Enable Voice support.])
    ]
)

dnl Enable TAPI DTMF support
AC_ARG_ENABLE(dtmf,
    AC_HELP_STRING(
        [--enable-dtmf],
        [Enable TAPI DTMF support]
    ),
    [
        if test $enableval = 'yes'; then
            AC_MSG_RESULT(Enable TAPI DTMF support.)
            AC_DEFINE([TAPI_DTMF],[1],[Enable TAPI DTMF support.])
        else
            AC_MSG_RESULT(Disable TAPI DTMF support.)
        fi
    ],
    [
        dnl Enable automatically:
        AC_MSG_RESULT([Enable TAPI DTMF support, as not explicit disabled!])
        AC_DEFINE([TAPI_DTMF],[1],[Enable TAPI DTMF support.])
    ]
)

dnl Enable TAPI CID support
AC_ARG_ENABLE(cid,
    AC_HELP_STRING(
        [--enable-cid],
        [Enable TAPI CID support]
    ),
    [
        if test $enableval = 'yes'; then
            AC_MSG_RESULT(Enable TAPI CID support.)
            AC_DEFINE([TAPI_CID],[1],[Enable TAPI CID support.])
        else
            AC_MSG_RESULT(Disable TAPI CID support.)
        fi
    ],
    [
        dnl Enable automatically:
        AC_MSG_RESULT([Enable TAPI CID support, as not explicit disabled!])
        AC_DEFINE([TAPI_CID],[1],[Enable TAPI CID support.])
    ]
)

dnl Enable TAPI FAX support
AC_ARG_ENABLE(fax,
    AC_HELP_STRING(
        [--enable-fax],
        [Enable TAPI T.38 FAX support]
    ),
    [
        if test $enableval = 'yes'; then
            AC_MSG_RESULT(Enable TAPI FAX support.)
            AC_DEFINE([TAPI_FAX_T38],[1],[Enable TAPI FAX support.])
        else
            AC_MSG_RESULT(Disable TAPI FAX support.)
        fi
    ],
    [
        dnl Enable automatically:
        AC_MSG_RESULT([Enable TAPI FAX support, as not explicit disabled!])
        AC_DEFINE([TAPI_FAX_T38],[1],[Enable TAPI FAX support.])
    ]
)

dnl Enable including default VINETIC firmware
AC_ARG_ENABLE(incl-bin,
    AC_HELP_STRING(
        [--enable-incl-bin],
        [Enable including default VINETIC firmware]
    ),
    [
        AC_MSG_RESULT(Enable including default VINETIC firmware.)
        AC_DEFINE([VIN_DEFAULT_FW],[1],[Enable including default firmware.])
    ]
)



#
case "${host}" in
   mips_fp_be)
      CFLAGS="$CFLAGS -fno-strict-aliasing -fno-common -fomit-frame-pointer -G 0 -mno-abicalls -fno-pic -pipe -mtune=r4600 -mips2 -Wa,--trap -DMODVERSIONS -DEXPORT_SYMTAB"
      ;;
   mips-linux)
      CFLAGS="$CFLAGS -fno-strict-aliasing -fno-common -fomit-frame-pointer -G 0 -mno-abicalls -fno-pic -pipe -mtune=r4600 -mips2 -Wa,--trap -mlong-calls -DMODVERSIONS -DEXPORT_SYMTAB"
      ;;
   mipsel-linux)
      CFLAGS="$CFLAGS -fno-strict-aliasing -fno-common -fomit-frame-pointer -mno-abicalls -fno-pic -pipe -mips2 -Wa,--trap  -Wa,--trap -D__linux__ -D_MIPS_ISA=6 -D_MIPS_SZLONG=32 -D_MIPS_SZPTR=32 -D_MIPS_SZINT=32 -D__MIPSEL__ -DUTS_MACHINE='"mips"' -mlong-calls"
      ;;
   *)
      ;;
esac

AC_CONFIG_FILES([
    Makefile
    src/Makefile
])

AC_OUTPUT

echo \
"------------------------------------------------------------------------
Configuration:

  Source code location: ${srcdir}
  Compiler:             ${CC}
  Compiler flags:       ${CFLAGS}
  Host System Type:     ${host}
  Install path:         ${prefix}
Settings:
  KERNEL_INCL_PATH:     ${KERNEL_INCL_PATH}
------------------------------------------------------------------------"


